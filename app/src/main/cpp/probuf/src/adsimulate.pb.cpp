// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adsimulate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "adsimulate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ADValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* ADSimulate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ADSimulate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_adsimulate_2eproto() {
  protobuf_AddDesc_adsimulate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "adsimulate.proto");
  GOOGLE_CHECK(file != NULL);
  ADValue_descriptor_ = file->message_type(0);
  static const int ADValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADValue, uimainads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADValue, uisubads_),
  };
  ADValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ADValue_descriptor_,
      ADValue::default_instance_,
      ADValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ADValue));
  ADSimulate_descriptor_ = file->message_type(1);
  static const int ADSimulate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADSimulate, data_),
  };
  ADSimulate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ADSimulate_descriptor_,
      ADSimulate::default_instance_,
      ADSimulate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADSimulate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ADSimulate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ADSimulate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_adsimulate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ADValue_descriptor_, &ADValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ADSimulate_descriptor_, &ADSimulate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_adsimulate_2eproto() {
  delete ADValue::default_instance_;
  delete ADValue_reflection_;
  delete ADSimulate::default_instance_;
  delete ADSimulate_reflection_;
}

void protobuf_AddDesc_adsimulate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020adsimulate.proto\".\n\007ADValue\022\021\n\tuiMainA"
    "ds\030\001 \003(\r\022\020\n\010uiSubAds\030\002 \003(\r\"$\n\nADSimulate"
    "\022\026\n\004data\030\001 \003(\0132\010.ADValue", 104);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "adsimulate.proto", &protobuf_RegisterTypes);
  ADValue::default_instance_ = new ADValue();
  ADSimulate::default_instance_ = new ADSimulate();
  ADValue::default_instance_->InitAsDefaultInstance();
  ADSimulate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_adsimulate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_adsimulate_2eproto {
  StaticDescriptorInitializer_adsimulate_2eproto() {
    protobuf_AddDesc_adsimulate_2eproto();
  }
} static_descriptor_initializer_adsimulate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ADValue::kUiMainAdsFieldNumber;
const int ADValue::kUiSubAdsFieldNumber;
#endif  // !_MSC_VER

ADValue::ADValue()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADValue)
}

void ADValue::InitAsDefaultInstance() {
}

ADValue::ADValue(const ADValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ADValue)
}

void ADValue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ADValue::~ADValue() {
  // @@protoc_insertion_point(destructor:ADValue)
  SharedDtor();
}

void ADValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ADValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADValue_descriptor_;
}

const ADValue& ADValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adsimulate_2eproto();
  return *default_instance_;
}

ADValue* ADValue::default_instance_ = NULL;

ADValue* ADValue::New() const {
  return new ADValue;
}

void ADValue::Clear() {
  uimainads_.Clear();
  uisubads_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ADValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uiMainAds = 1;
      case 1: {
        if (tag == 8) {
         parse_uiMainAds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_uimainads())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uimainads())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_uiMainAds;
        if (input->ExpectTag(16)) goto parse_uiSubAds;
        break;
      }

      // repeated uint32 uiSubAds = 2;
      case 2: {
        if (tag == 16) {
         parse_uiSubAds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_uisubads())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uisubads())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uiSubAds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADValue)
  return false;
#undef DO_
}

void ADValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADValue)
  // repeated uint32 uiMainAds = 1;
  for (int i = 0; i < this->uimainads_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->uimainads(i), output);
  }

  // repeated uint32 uiSubAds = 2;
  for (int i = 0; i < this->uisubads_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->uisubads(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ADValue)
}

::google::protobuf::uint8* ADValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ADValue)
  // repeated uint32 uiMainAds = 1;
  for (int i = 0; i < this->uimainads_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->uimainads(i), target);
  }

  // repeated uint32 uiSubAds = 2;
  for (int i = 0; i < this->uisubads_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->uisubads(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADValue)
  return target;
}

int ADValue::ByteSize() const {
  int total_size = 0;

  // repeated uint32 uiMainAds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->uimainads_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->uimainads(i));
    }
    total_size += 1 * this->uimainads_size() + data_size;
  }

  // repeated uint32 uiSubAds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uisubads_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->uisubads(i));
    }
    total_size += 1 * this->uisubads_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ADValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ADValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ADValue::MergeFrom(const ADValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  uimainads_.MergeFrom(from.uimainads_);
  uisubads_.MergeFrom(from.uisubads_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ADValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADValue::CopyFrom(const ADValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADValue::IsInitialized() const {

  return true;
}

void ADValue::Swap(ADValue* other) {
  if (other != this) {
    uimainads_.Swap(&other->uimainads_);
    uisubads_.Swap(&other->uisubads_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ADValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADValue_descriptor_;
  metadata.reflection = ADValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ADSimulate::kDataFieldNumber;
#endif  // !_MSC_VER

ADSimulate::ADSimulate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADSimulate)
}

void ADSimulate::InitAsDefaultInstance() {
}

ADSimulate::ADSimulate(const ADSimulate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ADSimulate)
}

void ADSimulate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ADSimulate::~ADSimulate() {
  // @@protoc_insertion_point(destructor:ADSimulate)
  SharedDtor();
}

void ADSimulate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ADSimulate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ADSimulate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADSimulate_descriptor_;
}

const ADSimulate& ADSimulate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_adsimulate_2eproto();
  return *default_instance_;
}

ADSimulate* ADSimulate::default_instance_ = NULL;

ADSimulate* ADSimulate::New() const {
  return new ADSimulate;
}

void ADSimulate::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ADSimulate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADSimulate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ADValue data = 1;
      case 1: {
        if (tag == 10) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADSimulate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADSimulate)
  return false;
#undef DO_
}

void ADSimulate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADSimulate)
  // repeated .ADValue data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ADSimulate)
}

::google::protobuf::uint8* ADSimulate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ADSimulate)
  // repeated .ADValue data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADSimulate)
  return target;
}

int ADSimulate::ByteSize() const {
  int total_size = 0;

  // repeated .ADValue data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ADSimulate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ADSimulate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ADSimulate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ADSimulate::MergeFrom(const ADSimulate& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ADSimulate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADSimulate::CopyFrom(const ADSimulate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADSimulate::IsInitialized() const {

  return true;
}

void ADSimulate::Swap(ADSimulate* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ADSimulate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ADSimulate_descriptor_;
  metadata.reflection = ADSimulate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
